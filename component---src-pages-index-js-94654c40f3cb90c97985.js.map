{"version":3,"file":"component---src-pages-index-js-94654c40f3cb90c97985.js","mappings":"sKAMMA,EAAe,CACnBC,QAAS,OACTC,OAAQ,OACRC,aAAc,MACdC,gBAAiB,UACjBC,OAAQ,EACRC,MAAO,QACPC,OAAQ,WAmDV,EAhDsB,WACpB,OAAwCC,EAAAA,EAAAA,WAAS,GAA1CC,EAAP,KAAqBC,EAArB,KACMC,GAA8BC,EAAAA,EAAAA,QAAO,MA6B3C,OAbAC,EAAAA,EAAAA,kBAAgB,WAGdC,QAAUA,OAAOC,iBACf,uBACA,SAAAC,GACEC,QAAQC,IAAI,qBACZF,EAAyBG,iBACzBR,EAA4BS,QAAUJ,EACtCN,GAAgB,QAEnB,IAGD,gCAEID,GACE,0BACEY,KAAK,SACLC,QAjCY,WACpB,IAAMC,EAAUZ,EAA4BS,QAC5CG,EAAQC,SACRD,EACGE,WACAC,MAAK,SAAAC,GACmB,aAAnBA,EAAOC,SACTlB,GAAgB,GAChBO,QAAQC,IAAI,aAETD,QAAQC,IAAI,oBAwBbW,MAAK,iBAAM7B,IAHb,2BCpBV,EA1BkB,WAWhB,OAVAa,EAAAA,EAAAA,kBAAgB,WACV,kBAAmBiB,WAAWA,UAC/BC,cACAC,SAAS,WACTN,MAAK,SAACO,GACLhB,QAAQC,IAAI,6BACZD,QAAQC,IAAIe,QAEf,IAGD,wBAAMC,UAAU,aACd,2BAASA,UAAU,WACjB,sBAAIA,UAAU,SAAd,mBAGA,qBAAGA,UAAU,YAAb,YACW,uDADX,KAGA,gBAAC,EAAD","sources":["webpack://pwa-gastby/./src/installButton.js","webpack://pwa-gastby/./src/pages/index.js"],"sourcesContent":["import React, { useRef, useLayoutEffect, useState} from 'react';\n\n\n/*\n* Service Worker installed on Gatsby Browser usign sw.js in static folder & custom manifest usign gatsby-plugin-manifest\n* */\nconst buttonStyles = {\n  padding: '16px',\n  margin: 'auto',\n  borderRadius: '8px',\n  backgroundColor: '#6a3280',\n  border: 0,\n  color: 'white',\n  cursor: 'pointer',\n};\n\nconst InstallButton = () => {\n  const [installabled, setInstallabled] = useState(false);\n  const beforeinstallpromptEventRef = useRef(null);\n\n  const choiceHandler = () => {\n    const handler = beforeinstallpromptEventRef.current;\n    handler.prompt();\n    handler\n      .userChoice\n      .then(result => {\n        if (result.outcome === 'accepted') {\n          setInstallabled(false);\n          console.log('Accepted');\n        }\n        else console.log('Not accepted');\n      });\n  }\n\n  useLayoutEffect(() => {\n    // only works in Chrome, android WebView, android Chrome, Samsung Internet and Internet explorer\n    // https://developer.mozilla.org/en-US/docs/Web/API/BeforeInstallPromptEvent\n    window && window.addEventListener(\n      'beforeinstallprompt',\n      beforeinstallpromptEvent => {\n        console.log('APP NOT INSTALLED');\n        beforeinstallpromptEvent.preventDefault();\n        beforeinstallpromptEventRef.current = beforeinstallpromptEvent;\n        setInstallabled(true)\n      });\n  }, []);\n\n  return (\n    <>\n      {\n        installabled && (\n          <button\n            type=\"button\"\n            onClick={choiceHandler}\n            style={{...buttonStyles}}\n          >\n            Click here to install\n          </button>\n        )\n      }\n    </>\n  )\n}\n\nexport default InstallButton;\n","import * as React from \"react\"\nimport InstallButton from \"../installButton\";\nimport 'bulma/css/bulma.min.css';\nimport {useLayoutEffect} from \"react\";\n\nconst IndexPage = () => {\n  useLayoutEffect(() => {\n    if ('serviceWorker' in navigator) navigator\n      .serviceWorker\n      .register('./sw.js')\n      .then((registration) => {\n        console.log('SERVICE WORKER REGISTERED')\n        console.log(registration);\n      });\n  }, []);\n\n  return (\n    <main className=\"container\">\n      <section className=\"section\">\n        <h1 className=\"title\">\n          PWA Gastby test\n        </h1>\n        <p className=\"subtitle\">\n          PWA test <strong>only works in Chrome!</strong>!\n        </p>\n        <InstallButton />\n      </section>\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["buttonStyles","padding","margin","borderRadius","backgroundColor","border","color","cursor","useState","installabled","setInstallabled","beforeinstallpromptEventRef","useRef","useLayoutEffect","window","addEventListener","beforeinstallpromptEvent","console","log","preventDefault","current","type","onClick","handler","prompt","userChoice","then","result","outcome","style","navigator","serviceWorker","register","registration","className"],"sourceRoot":""}